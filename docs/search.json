[{"path":"http://gabrielhoffman.github.io/zenith/articles/loading_genesets.html","id":"easy-loading-of-gene-set-databases","dir":"Articles","previous_headings":"","what":"Easy loading of gene set databases","title":"Loading gene sets","text":"shortcuts load common databases:","code":"library(zenith)  ## MSigDB as ENSEMBL genes # all genesets in MSigDB gs.msigdb = get_MSigDB()  # only Hallmark gene sets gs = get_MSigDB('H')  # only C1 gs = get_MSigDB('C1')  # C1 and C2 gs = get_MSigDB(c('C1', 'C2'))  # C1 as gene SYMBOL gs = get_MSigDB('C1', to=\"SYMBOL\")  # C1 as gene ENTREZ gs = get_MSigDB('C1', to=\"ENTREZ\")  ## Gene Ontology gs.go = get_GeneOntology()  # load Biological Process and gene SYMBOL gs.go = get_GeneOntology(\"BP\", to=\"SYMBOL\")"},{"path":"http://gabrielhoffman.github.io/zenith/articles/loading_genesets.html","id":"other-databases","dir":"Articles","previous_headings":"","what":"Other databases","title":"Loading gene sets","text":"EnrichmentBrowser provides additional databases (.e. KEGG, Enrichr), alternate gene identifiers (.e. ENSEMBL, ENTREZ) species (.e. hsa, mmu)","code":"library(EnrichmentBrowser)  # KEGG gs.kegg = getGenesets(org = \"hsa\",                        db = \"kegg\",                        gene.id.type = \"ENSEMBL\",                        return.type = \"GeneSetCollection\")  ## ENRICHR resource # provides many additional gene set databases df = showAvailableCollections( org = \"hsa\", db = \"enrichr\")  head(df)  # Allen_Brain_Atlas_10x_scRNA_2021 gs.allen = getGenesets( org = \"hsa\",                          db = \"enrichr\",                          lib = \"Allen_Brain_Atlas_10x_scRNA_2021\",                         gene.id.type = \"ENSEMBL\",                          return.type = \"GeneSetCollection\")"},{"path":"http://gabrielhoffman.github.io/zenith/articles/loading_genesets.html","id":"custom-gene-sets","dir":"Articles","previous_headings":"","what":"Custom gene sets","title":"Loading gene sets","text":"","code":"# Load gene sets from GMT file gmt.file <- system.file(\"extdata/hsa_kegg_gs.gmt\",                        package = \"EnrichmentBrowser\") gs <- getGenesets(gmt.file)"},{"path":"http://gabrielhoffman.github.io/zenith/articles/zenith.html","id":"standard-workflow","dir":"Articles","previous_headings":"","what":"Standard workflow","title":"Zenith gene set testing after dream analysis","text":"","code":"# Load packages library(zenith) library(edgeR) library(variancePartition) library(tweeDEseqCountData) library(kableExtra)  # Load RNA-seq data from LCL's data(pickrell) geneCounts = exprs(pickrell.eset) df_metadata = pData(pickrell.eset)  # Filter genes # Note this is low coverage data, so just use as code example dsgn = model.matrix(~ gender, df_metadata) keep = filterByExpr(geneCounts, dsgn, min.count=5)  # Compute library size normalization dge = DGEList(counts = geneCounts[keep,]) dge = calcNormFactors(dge)  # Estimate precision weights using voom vobj = voomWithDreamWeights(dge, ~ gender, df_metadata)  # Apply dream analysis fit = dream(vobj, ~ gender, df_metadata) fit = eBayes(fit)  # Load get_MSigDB database, Hallmark genes # use gene 'SYMBOL', or 'ENSEMBL' id # use get_GeneOntology() to load Gene Ontology msdb.gs = get_MSigDB(\"H\", to=\"ENSEMBL\")     # Run zenith analysis, and specific which coefficient to evaluate res.gsa = zenith_gsa(fit, msdb.gs, 'gendermale', progressbar=FALSE )  # Show top gene sets: head(res.gsa) kable_styling(kable(head(res.gsa), row.names=FALSE)) # for each cell type select 3 genesets with largest t-statistic # and 1 geneset with the lowest # Grey boxes indicate the gene set could not be evaluted because #    to few genes were represented plotZenithResults(res.gsa)"},{"path":"http://gabrielhoffman.github.io/zenith/articles/zenith.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Zenith gene set testing after dream analysis","text":"","code":"## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin19.6.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ##  ## Matrix products: default ## BLAS:   /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] org.Hs.eg.db_3.15.0       AnnotationDbi_1.58.0      ##  [3] IRanges_2.30.0            S4Vectors_0.34.0          ##  [5] msigdbr_7.5.1             kableExtra_1.3.4          ##  [7] tweeDEseqCountData_1.34.0 Biobase_2.56.0            ##  [9] BiocGenerics_0.42.0       variancePartition_1.27.2  ## [11] BiocParallel_1.30.3       ggplot2_3.3.6             ## [13] edgeR_3.38.1              limma_3.52.1              ## [15] zenith_0.99.10            knitr_1.39                ##  ## loaded via a namespace (and not attached): ##   [1] backports_1.4.1             BiocFileCache_2.4.0         ##   [3] systemfonts_1.0.4           plyr_1.8.7                  ##   [5] GSEABase_1.58.0             splines_4.2.0               ##   [7] GenomeInfoDb_1.32.2         digest_0.6.29               ##   [9] foreach_1.5.2               htmltools_0.5.2             ##  [11] fansi_1.0.3                 magrittr_2.0.3              ##  [13] memoise_2.0.1               doParallel_1.0.17           ##  [15] aod_1.3.2                   Biostrings_2.64.0           ##  [17] annotate_1.74.0             matrixStats_0.62.0          ##  [19] svglite_2.1.0               pkgdown_2.0.4               ##  [21] prettyunits_1.1.1           colorspace_2.0-3            ##  [23] rappdirs_0.3.3              blob_1.2.3                  ##  [25] rvest_1.0.2                 textshaping_0.3.6           ##  [27] rbibutils_2.2.8             xfun_0.31                   ##  [29] dplyr_1.0.9                 crayon_1.5.1                ##  [31] RCurl_1.98-1.7              jsonlite_1.8.0              ##  [33] graph_1.74.0                lme4_1.1-29                 ##  [35] iterators_1.0.14            glue_1.6.2                  ##  [37] gtable_0.3.0                zlibbioc_1.42.0             ##  [39] XVector_0.36.0              webshot_0.5.3               ##  [41] DelayedArray_0.22.0         EnrichmentBrowser_2.26.0    ##  [43] Rgraphviz_2.40.0            RcppZiggurat_0.1.6          ##  [45] scales_1.2.0                DBI_1.1.2                   ##  [47] Rcpp_1.0.8.3                viridisLite_0.4.0           ##  [49] xtable_1.8-4                progress_1.2.2              ##  [51] bit_4.0.4                   httr_1.4.3                  ##  [53] gplots_3.1.3                ellipsis_0.3.2              ##  [55] farver_2.1.0                pkgconfig_2.0.3             ##  [57] XML_3.99-0.10               sass_0.4.1                  ##  [59] dbplyr_2.2.0                locfit_1.5-9.5              ##  [61] utf8_1.2.2                  labeling_0.4.2              ##  [63] tidyselect_1.1.2            rlang_1.0.2                 ##  [65] reshape2_1.4.4              munsell_0.5.0               ##  [67] tools_4.2.0                 cachem_1.0.6                ##  [69] cli_3.3.0                   generics_0.1.2              ##  [71] RSQLite_2.2.14              broom_0.8.0                 ##  [73] evaluate_0.15               stringr_1.4.0               ##  [75] fastmap_1.1.0               yaml_2.3.5                  ##  [77] ragg_1.2.2                  babelgene_22.3              ##  [79] RhpcBLASctl_0.21-247.1      bit64_4.0.5                 ##  [81] fs_1.5.2                    caTools_1.18.2              ##  [83] purrr_0.3.4                 KEGGREST_1.36.2             ##  [85] nlme_3.1-157                KEGGgraph_1.56.0            ##  [87] xml2_1.3.3                  compiler_4.2.0              ##  [89] pbkrtest_0.5.1              rstudioapi_0.13             ##  [91] filelock_1.0.2              curl_4.3.2                  ##  [93] png_0.1-7                   tibble_3.1.7                ##  [95] bslib_0.3.1                 stringi_1.7.6               ##  [97] highr_0.9                   desc_1.4.1                  ##  [99] lattice_0.20-45             Matrix_1.4-1                ## [101] nloptr_2.0.3                vctrs_0.4.1                 ## [103] pillar_1.7.0                lifecycle_1.0.1             ## [105] Rdpack_2.3.1                jquerylib_0.1.4             ## [107] bitops_1.0-7                GenomicRanges_1.48.0        ## [109] R6_2.5.1                    KernSmooth_2.23-20          ## [111] codetools_0.2-18            boot_1.3-28                 ## [113] MASS_7.3-57                 gtools_3.9.2.1              ## [115] assertthat_0.2.1            SummarizedExperiment_1.26.1 ## [117] rprojroot_2.0.3             withr_2.5.0                 ## [119] GenomeInfoDbData_1.2.8      parallel_4.2.0              ## [121] hms_1.1.1                   grid_4.2.0                  ## [123] tidyr_1.2.0                 minqa_1.2.4                 ## [125] rmarkdown_2.14              Rfast_2.0.6                 ## [127] MatrixGenerics_1.8.0"},{"path":"http://gabrielhoffman.github.io/zenith/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Hoffman. Author, maintainer.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoffman G (2022). zenith: Gene set analysis following differential expression using linear (mixed) modeling dream. R package version 0.99.10, https://DiseaseNeuroGenomics.github.io/zenith.","code":"@Manual{,   title = {zenith: Gene set analysis following differential expression using linear (mixed) modeling with dream},   author = {Gabriel Hoffman},   year = {2022},   note = {R package version 0.99.10},   url = {https://DiseaseNeuroGenomics.github.io/zenith}, }"},{"path":"http://gabrielhoffman.github.io/zenith/index.html","id":"gene-set-testing-after-dream-analysis","dir":"","previous_headings":"","what":"Gene set testing after dream analysis","title":"Gene set analysis following differential expression using linear (mixed) modeling with dream","text":"zenith() performs gene set analysis result differential expression using linear (mixed) modeling dream considering correlation gene expression traits. package implements camera method limma package proposed Wu Smyth (2012). zenith() simple extension limma::camera() compatible linear mixed models implemented variancePartition::dream().","code":""},{"path":"http://gabrielhoffman.github.io/zenith/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Gene set analysis following differential expression using linear (mixed) modeling with dream","text":"May 13, 2022","code":"# Install package and dependencies devtools::install_github(\"DiseaseNeuroGenomics/zenith\")"},{"path":"http://gabrielhoffman.github.io/zenith/reference/corInGeneSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate mean correlation between residuals in gene set — corInGeneSet","title":"Evaluate mean correlation between residuals in gene set — corInGeneSet","text":"Evaluate mean correlation residuals gene set based results dream","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/corInGeneSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate mean correlation between residuals in gene set — corInGeneSet","text":"","code":"corInGeneSet(fit, idx, squareCorr = FALSE)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/corInGeneSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate mean correlation between residuals in gene set — corInGeneSet","text":"fit result differential expression dream idx indeces rownames extract squareCorr compute mean squared correlation instead","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/corInGeneSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate mean correlation between residuals in gene set — corInGeneSet","text":"list storing correlation variance inflation factor","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/dot-rankSumTestWithCorrelation.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","title":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","text":"limma::.rankSumTestWithCorrelation, returns effect size.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/dot-rankSumTestWithCorrelation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","text":"","code":".rankSumTestWithCorrelation(index, statistics, correlation = 0, df = Inf)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/dot-rankSumTestWithCorrelation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","text":"index index vector statistics[index] contains values statistic test group. statistics numeric vector giving values test statistic. correlation numeric scalar, average correlation cases test group.  Cases second group assumed independent first group. df degrees freedom correlation estimated.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/dot-rankSumTestWithCorrelation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","text":"data.frame storing results hypothesis test","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/dot-rankSumTestWithCorrelation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two Sample Wilcoxon-Mann-Whitney Rank Sum Test Allowing For Correlation — .rankSumTestWithCorrelation","text":"See limma::.rankSumTestWithCorrelation","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Gene Ontology genesets — get_GeneOntology","title":"Load Gene Ontology genesets — get_GeneOntology","text":"Load Gene Ontology genesets","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Gene Ontology genesets — get_GeneOntology","text":"","code":"get_GeneOntology(   onto = c(\"BP\", \"MF\", \"CC\"),   to = \"ENSEMBL\",   includeOffspring = TRUE )"},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Gene Ontology genesets — get_GeneOntology","text":"onto array categories load convert gene names type using EnrichmentBrowser::idMap().  See EnrichmentBrowser::idTypes(org=\"hsa\") valid types includeOffspring TRUE, follow GO hierarchy include genes offspring sets given gene set","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Gene Ontology genesets — get_GeneOntology","text":"Gene sets stored GeneSetCollection","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Gene Ontology genesets — get_GeneOntology","text":"function loads GO gene sets using packages EnrichmentBrowser GO.db  can take mintute load converting gene name type slow.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_GeneOntology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Gene Ontology genesets — get_GeneOntology","text":"","code":"# load GO Biological Process # gs = get_GeneOntology('BP')  # load all gene sets # gs = get_GeneOntology()"},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MSigDB genesets — get_MSigDB","title":"Load MSigDB genesets — get_MSigDB","text":"Load MSigDB genesets","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MSigDB genesets — get_MSigDB","text":"","code":"get_MSigDB(cat = unique(msigdbr_collections()$gs_cat), to = \"ENSEMBL\")"},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MSigDB genesets — get_MSigDB","text":"cat array categories load.  Defaults array MSigDB categories convert gene names type using EnrichmentBrowser::idMap().  See EnrichmentBrowser::idTypes(org=\"hsa\") valid types","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MSigDB genesets — get_MSigDB","text":"Gene sets stored GeneSetCollection","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load MSigDB genesets — get_MSigDB","text":"function loads MSigDB gene sets using packages EnrichmentBrowser msigdbr.  can take mintute load converting gene name type slow.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/get_MSigDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load MSigDB genesets — get_MSigDB","text":"","code":"# load Hallmark gene sets gs = get_MSigDB('H')  # load all gene sets # gs = get_MSigDB()"},{"path":"http://gabrielhoffman.github.io/zenith/reference/plotZenithResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of zenith results using ggplot2 — plotZenithResults","title":"Heatmap of zenith results using ggplot2 — plotZenithResults","text":"Heatmap zenith results showing genesets top bottom t-statistics assay.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/plotZenithResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of zenith results using ggplot2 — plotZenithResults","text":"","code":"plotZenithResults(   df,   ntop = 5,   nbottom = 5,   label.angle = 45,   zmax = NULL,   transpose = FALSE,   sortByGeneset = TRUE )"},{"path":"http://gabrielhoffman.github.io/zenith/reference/plotZenithResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of zenith results using ggplot2 — plotZenithResults","text":"df result data.frame zenith_gsa ntop number gene sets highest t-statistic show nbottom number gene sets lowest t-statistic show label.angle angle x-axis label zmax maxium color scales.  specified, used range observed t-statistics transpose transpose axes plot sortByGeneset use hierarchical clustering sort gene sets. Default TRUE","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/plotZenithResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of zenith results using ggplot2 — plotZenithResults","text":"Heatmap showing enrichment gene sets cell types","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/plotZenithResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of zenith results using ggplot2 — plotZenithResults","text":"","code":"# Load packages library(edgeR) #> Loading required package: limma #>  #> Attaching package: ‘limma’ #> The following object is masked from ‘package:BiocGenerics’: #>  #>     plotMA library(variancePartition) #> Loading required package: ggplot2 #> Loading required package: BiocParallel library(tweeDEseqCountData)  # Load RNA-seq data from LCL's data(pickrell) geneCounts = exprs(pickrell.eset) df_metadata = pData(pickrell.eset)  # Filter genes # Note this is low coverage data, so just use as code example dsgn = model.matrix(~ gender, df_metadata) keep = filterByExpr(geneCounts, dsgn, min.count=5)  # Compute library size normalization dge = DGEList(counts = geneCounts[keep,]) dge = calcNormFactors(dge)  # Estimate precision weights using voom vobj = voomWithDreamWeights(dge, ~ gender, df_metadata) #> Fixed effect model, using limma directly...  # Apply dream analysis fit = dream(vobj, ~ gender,df_metadata) #> Fixed effect model, using limma directly... #> User can apply eBayes() afterwards... fit = eBayes(fit)  # Load Hallmark genes from MSigDB # use gene 'SYMBOL', or 'ENSEMBL' id # use get_GeneOntology() to load Gene Ontology gs = get_MSigDB(\"H\", to=\"ENSEMBL\")     # Run zenith analysis res.gsa = zenith_gsa(fit, gs, 'gendermale', progressbar=FALSE )  # Show top gene sets head(res.gsa, 2) #>                                              coef #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB gendermale #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS gendermale #>                                                                       Geneset #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS #>                                        NGenes Correlation     delta        se #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB    119        0.01 -1.001965 0.1618263 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS     37        0.01 -1.091536 0.2296170 #>                                              p.less p.greater       PValue #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB 2.053663e-08 1.0000000 4.107327e-08 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS 5.493684e-06 0.9999945 1.098737e-05 #>                                        Direction          FDR #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB      Down 1.930444e-06 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS      Down 2.582032e-04  # for each cell type select 3 genesets with largest t-statistic # and 1 geneset with the lowest # Grey boxes indicate the gene set could not be evaluted because #    to few genes were represented plotZenithResults(res.gsa)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList-GeneSetCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode GeneSetCollection to list used by limma — recodeToList,GeneSetCollection-method","title":"Recode GeneSetCollection to list used by limma — recodeToList,GeneSetCollection-method","text":"Recode GeneSetCollection list used limma","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList-GeneSetCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode GeneSetCollection to list used by limma — recodeToList,GeneSetCollection-method","text":"","code":"# S4 method for GeneSetCollection recodeToList(gsc)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList-GeneSetCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode GeneSetCollection to list used by limma — recodeToList,GeneSetCollection-method","text":"gsc GeneSetCollection object","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList-GeneSetCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode GeneSetCollection to list used by limma — recodeToList,GeneSetCollection-method","text":"list storing data GeneSetCollection","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode GeneSetCollection to list used by limma — recodeToList","title":"Recode GeneSetCollection to list used by limma — recodeToList","text":"Recode GeneSetCollection list used limma","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode GeneSetCollection to list used by limma — recodeToList","text":"","code":"recodeToList(gsc)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode GeneSetCollection to list used by limma — recodeToList","text":"gsc GeneSetCollection object","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode GeneSetCollection to list used by limma — recodeToList","text":"list storing data GeneSetCollection","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/recodeToList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode GeneSetCollection to list used by limma — recodeToList","text":"","code":"# load Hallmark gene sets gs = get_MSigDB('H')  # recode GeneSetCollection as a list gs.list = recodeToList(gs)"},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set analysis following differential expression with dream — zenith","title":"Gene set analysis following differential expression with dream — zenith","text":"Perform gene set analysis result differential expression using linear (mixed) modeling variancePartition::dream considering correlation gene expression traits.  package slight modification limma::camera 1) compatible dream, 2) allow identification gene sets log fold changes mixed sign.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set analysis following differential expression with dream — zenith","text":"","code":"zenith(   fit,   coef,   index,   use.ranks = FALSE,   allow.neg.cor = FALSE,   progressbar = TRUE,   inter.gene.cor = 0.01 )"},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene set analysis following differential expression with dream — zenith","text":"fit result differential expression dream coef coefficient test using topTable(fit, coef) index index vector list index vectors.  Can vector fit[index,] selects rows corresponding test set.  list can made using ids2indices. use.ranks rank-based test (TRUE) parametric test ('FALSE')? allow.neg.cor reduced variance inflation factors allowed negative correlations? progressbar TRUE, show progress bar inter.gene.cor NA, estimate correlation data.  Otherwise, use specified value","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene set analysis following differential expression with dream — zenith","text":"NGenes: number genes set Correlation: mean correlation expression genes set delta: difference mean t-statistic genes set compared genes set se: standard error delta p.less: p-value hypothesis test H0: delta < 0 p.greater: p-value hypothesis test H0: delta > 0 PValue:  p-value hypothesis test H0: delta != 0 Direction: direction effect based sign(delta) FDR: false discovery rate based Benjamini-Hochberg method p.adjust","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene set analysis following differential expression with dream — zenith","text":"zenith gives results camera(..., inter.gene.cor=NA) estimates correlation gene set. differential expression dream using linear (mixed) models see Hoffman Roussos (2020).  original camera gene set test see Wu Smyth (2012).","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gene set analysis following differential expression with dream — zenith","text":"Hoffman GE, Roussos P (2020). “dream: Powerful differential expression analysis repeated measures designs.” Bioinformatics. doi:10.1093/bioinformatics/btaa687 .  Wu D, Smyth GK (2012). “Camera: competitive gene set test accounting inter-gene correlation.” Nucleic acids research, 40(17), e133. doi:10.1093/nar/gks461 .","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene set analysis following differential expression with dream — zenith","text":"","code":"library(variancePartition)  # simulate meta-data info <- data.frame(Age=c(20, 31, 52, 35, 43, 45),Group=c(0,0,0,1,1,1))  # simulate expression data y <- matrix(rnorm(1000*6),1000,6) rownames(y) = paste0(\"gene\", 1:1000) colnames(y) = rownames(info)  # First set of 20 genes are genuinely differentially expressed index1 <- 1:20 y[index1,4:6] <- y[index1,4:6]+1  # Second set of 20 genes are not DE index2 <- 21:40  # perform differential expression analysis with dream fit = dream(y, ~ Age + Group, info) #> Fixed effect model, using limma directly... #> User can apply eBayes() afterwards... fit = eBayes(fit)  # perform gene set analysis testing Age res = zenith(fit, \"Age\", list(set1=index1,set2=index2) )  head(res) #>      NGenes Correlation      delta        se    p.less p.greater    PValue #> set1     20        0.01 -0.3697639 0.2476785 0.1161452 0.8838548 0.2322904 #> set2     20        0.01  0.3618847 0.2476923 0.8799248 0.1200752 0.2401504 #>      Direction       FDR #> set1      Down 0.2401504 #> set2        Up 0.2401504"},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform gene set analysis using zenith — zenith_gsa","title":"Perform gene set analysis using zenith — zenith_gsa","text":"Perform competitive gene set analysis accounting correlation genes.","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform gene set analysis using zenith — zenith_gsa","text":"","code":"zenith_gsa(   fit,   geneSets,   coefs,   use.ranks = FALSE,   n_genes_min = 10,   inter.gene.cor = 0.01,   progressbar = TRUE,   ... )  # S4 method for MArrayLM,GeneSetCollection zenith_gsa(   fit,   geneSets,   coefs,   use.ranks = FALSE,   n_genes_min = 10,   inter.gene.cor = 0.01,   progressbar = TRUE,   ... )"},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform gene set analysis using zenith — zenith_gsa","text":"fit results dream() geneSets GeneSetCollection coefs coefficients test using topTable(fit, coef=coefs[]) use.ranks rank-based test TRUE parametric test FALSE? default: FALSE n_genes_min minumum number genes geneset inter.gene.cor NA, estimate correlation data.  Otherwise, use specified value progressbar TRUE, show progress bar ... arguments","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform gene set analysis using zenith — zenith_gsa","text":"data.frame results gene set cell type","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform gene set analysis using zenith — zenith_gsa","text":"code adapts widely used camera() analysis (Wu Smyth 2012)  limma package (Ritchie et al. 2015)  case linear (mixed) models used variancePartition::dream().","code":""},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform gene set analysis using zenith — zenith_gsa","text":"Ritchie , Phipson B, Wu DI, Hu Y, Law CW, Shi W, Smyth GK (2015). “limma powers differential expression analyses RNA-sequencing microarray studies.” Nucleic acids research, 43(7), e47--e47. Wu D, Smyth GK (2012). “Camera: competitive gene set test accounting inter-gene correlation.” Nucleic acids research, 40(17), e133. doi:10.1093/nar/gks461 .","code":""},{"path":[]},{"path":"http://gabrielhoffman.github.io/zenith/reference/zenith_gsa-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform gene set analysis using zenith — zenith_gsa","text":"","code":"# Load packages library(edgeR) library(variancePartition) library(tweeDEseqCountData)  # Load RNA-seq data from LCL's data(pickrell) geneCounts = exprs(pickrell.eset) df_metadata = pData(pickrell.eset)  # Filter genes # Note this is low coverage data, so just use as code example dsgn = model.matrix(~ gender, df_metadata) keep = filterByExpr(geneCounts, dsgn, min.count=5)  # Compute library size normalization dge = DGEList(counts = geneCounts[keep,]) dge = calcNormFactors(dge)  # Estimate precision weights using voom vobj = voomWithDreamWeights(dge, ~ gender, df_metadata) #> Fixed effect model, using limma directly...  # Apply dream analysis fit = dream(vobj, ~ gender, df_metadata) #> Fixed effect model, using limma directly... #> User can apply eBayes() afterwards... fit = eBayes(fit)  # Load Hallmark genes from MSigDB # use gene 'SYMBOL', or 'ENSEMBL' id # use get_GeneOntology() to load Gene Ontology gs = get_MSigDB(\"H\", to=\"ENSEMBL\")     # Run zenith analysis res.gsa = zenith_gsa(fit, gs, 'gendermale', progressbar=FALSE )  # Show top gene sets head(res.gsa, 2) #>                                              coef #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB gendermale #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS gendermale #>                                                                       Geneset #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS #>                                        NGenes Correlation     delta        se #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB    119        0.01 -1.001965 0.1618263 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS     37        0.01 -1.091536 0.2296170 #>                                              p.less p.greater       PValue #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB 2.053663e-08 1.0000000 4.107327e-08 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS 5.493684e-06 0.9999945 1.098737e-05 #>                                        Direction          FDR #> M5890_HALLMARK_TNFA_SIGNALING_VIA_NFKB      Down 1.930444e-06 #> M5892_HALLMARK_CHOLESTEROL_HOMEOSTASIS      Down 2.582032e-04  # for each cell type select 3 genesets with largest t-statistic # and 1 geneset with the lowest # Grey boxes indicate the gene set could not be evaluted because #    to few genes were represented plotZenithResults(res.gsa)"}]
